for (i in a) {
c = c+1
if(length(i)>=2){
temp <- i[1]
for (j in 2:length(i)) {
temp <- paste0(temp,i[j])
}
a[c] <- temp
}
}
error <- unlist(a)
error1 <- c()
error.index<-c()
for (i in 1:length(error)) {
if(error[i] != ""){
error1 <- c(error1,error[i])
error.index<-c(error.index,i)
}
}
ground <- ground_truth_vec
b <- na.omit(strsplit(unlist(ground), "[^a-z]+"))
c = 0
for (i in b) {
c = c+1
if(length(i)>=2){
temp <- i[1]
for (j in 2:length(i)) {
temp <- paste0(temp,i[j])
}
b[c] <- temp
}
}
ground <- unlist(b)
ground1 <- c()
for (i in ground) {
if(i != ""){
ground1 <- c(ground1,i)
}
}
#devide word by length
#max(nchar(ground1))
l = sort(unique(nchar(ground1)))
word_by_len = list()
for (i in ground1) {
for (j in l) {
if (nchar(i) == j){
word_by_len[j][[1]] <- append(i,word_by_len[j][[1]])
}
}
}
#built matrix for each length of words
l <- l[-1]
for (i in l) {
for (k in 1:(i-1)){
for(j in (k+1):i) {
name <- paste("D",i, k, j, sep = "_")
df <- data.frame(matrix(c(rep(0,26*26)),26,26))
colnames(df) <- c(letters)
rownames(df) <- c(letters)
assign(name,df)
}
}
}
#assign each character pair to matrix.
for (i in 2:length(word_by_len)) {
for (j in word_by_len[[i]]) {
for (k in 1:(i-1)) {
for (a in (k+1):i) {
temp <- paste("D",i, k, a, sep = "_")
char1 <- substr(j,k,k)
char2 <- substr(j,a,a)
tempD <- get(temp)
#print()
tempD[char1,char2] <- 1
assign(temp,tempD)
}
}
}
}
sum(dete_error2$correct!=dete_error2$error1)/nrow(dete_error2)
dete_error2<-dete_error
sum(dete_error2$correct!=dete_error2$error1)/nrow(dete_error2)
#deal with two errors
detect_pos <- rep(0,length(error1))
dete_error <- data.frame(error1,detect_pos)
dete_error$pos1 <- rep(0,length(error1))
dete_error$pos2 <- rep(0,length(error1))
cc <- 1
for (i in error1) {
len <- nchar(i)
err2 <- c()
if (len==1) {
cc <- cc+1
next
}
if (len!=1){
for (j in 1:(len-1)) {
for (k in (j+1):len) {
temp <- paste("D",len, j, k, sep = "_")
tempDD <- get(temp)
char1 <- substr(i,j,j)
char2 <- substr(i,k,k)
if(tempDD[char1,char2]==0) {
err2 <- c(err2,j,k)
}
}
}
}
mode1 <- mfv(err2)
if (length(mode1)==2) {
if (nchar(i)==2){
dete_error[cc,3] <- mode1[1]
}
else{dete_error[cc,3] <- mode1[1]
dete_error[cc,4] <- mode1[2]}
}
if (is.na(mode1)) {
cc <- cc+1
next
}
if (length(mode1)==1) {
t <- table(err2)
num <- t[names(t)==mode1][[1]]
if (num == length(err1)/2) {
dete_error[cc,3] <- mode1
}
else {
dete_error[cc,3] <- mode1
err2 <- err2[-which(err2 == mode1)]
mode2 <- mfv(err2)
if (length(mode2)==1) {
dete_error[cc,4] <- mode2
}
}
}
#print(i)
cc <- cc+1
}
#correct two errors
#find the correct character
ccun <- 0
dete_error$corr <- dete_error[,1]
dete_error[,5] <- as.character(dete_error[,5])
for (l in error1) {
ccun <- ccun+1
if (dete_error[ccun,4]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
substr(dete_error[ccun,5],dete_error[ccun,4],dete_error[ccun,4]) <- j
temp_word <- dete_error[ccun,5]
# print(temp_word)
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
} else if (dete_error[ccun,3]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
temp_word <- dete_error[ccun,5]
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
} else {next}
}
detect_pos
error1
dete_error
error1
detect_pos
dete_error
#deal with two errors
detect_pos <- rep(0,length(error1))
dete_error <- data.frame(error1,detect_pos)
dete_error$pos1 <- rep(0,length(error1))
dete_error$pos2 <- rep(0,length(error1))
cc <- 1
for (i in error1) {
len <- nchar(i)
err2 <- c()
if (len==1) {
cc <- cc+1
next
}
if (len!=1){
for (j in 1:(len-1)) {
for (k in (j+1):len) {
temp <- paste("D",len, j, k, sep = "_")
tempDD <- get(temp)
char1 <- substr(i,j,j)
char2 <- substr(i,k,k)
if(tempDD[char1,char2]==0) {
err2 <- c(err2,j,k)
}
}
}
}
mode1 <- mfv(err2)
if (length(mode1)==2) {
if (nchar(i)==2){
dete_error[cc,3] <- mode1[1]
}
else{dete_error[cc,3] <- mode1[1]
dete_error[cc,4] <- mode1[2]}
}
if (is.na(mode1)) {
cc <- cc+1
next
}
if (length(mode1)==1) {
t <- table(err2)
num <- t[names(t)==mode1][[1]]
if (num == length(err1)/2) {
dete_error[cc,3] <- mode1
}
else {
dete_error[cc,3] <- mode1
err2 <- err2[-which(err2 == mode1)]
mode2 <- mfv(err2)
if (length(mode2)==1) {
dete_error[cc,4] <- mode2
}
}
}
#print(i)
cc <- cc+1
}
#correct two errors
#find the correct character
ccun <- 0
dete_error$corr <- dete_error[,1]
dete_error[,5] <- as.character(dete_error[,5])
for (l in error1) {
ccun <- ccun+1
if (dete_error[ccun,4]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
substr(dete_error[ccun,5],dete_error[ccun,4],dete_error[ccun,4]) <- j
temp_word <- dete_error[ccun,5]
# print(temp_word)
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
} else if (dete_error[ccun,3]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
temp_word <- dete_error[ccun,5]
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
} else {next}
}
#deal with two errors
detect_pos <- rep(0,length(error1))
dete_error <- data.frame(error1,detect_pos)
dete_error$pos1 <- rep(0,length(error1))
dete_error$pos2 <- rep(0,length(error1))
cc <- 1
for (i in error1) {
len <- nchar(i)
err2 <- c()
if (len==1) {
cc <- cc+1
next
}
if (len!=1){
for (j in 1:(len-1)) {
for (k in (j+1):len) {
temp <- paste("D",len, j, k, sep = "_")
tempDD <- get(temp)
char1 <- substr(i,j,j)
char2 <- substr(i,k,k)
if(tempDD[char1,char2]==0) {
err2 <- c(err2,j,k)
}
}
}
}
mode1 <- mfv(err2)
if (length(mode1)==2) {
if (nchar(i)==2){
dete_error[cc,3] <- mode1[1]
}
else{dete_error[cc,3] <- mode1[1]
dete_error[cc,4] <- mode1[2]}
}
if (is.na(mode1)) {
cc <- cc+1
next
}
if (length(mode1)==1) {
t <- table(err2)
num <- t[names(t)==mode1][[1]]
if (num == length(err2)/2) {
dete_error[cc,3] <- mode1
}
else {
dete_error[cc,3] <- mode1
err2 <- err2[-which(err2 == mode1)]
mode2 <- mfv(err2)
if (length(mode2)==1) {
dete_error[cc,4] <- mode2
}
}
}
#print(i)
cc <- cc+1
}
#correct two errors
#find the correct character
ccun <- 0
dete_error$corr <- dete_error[,1]
dete_error[,5] <- as.character(dete_error[,5])
for (l in error1) {
ccun <- ccun+1
if (dete_error[ccun,4]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
substr(dete_error[ccun,5],dete_error[ccun,4],dete_error[ccun,4]) <- j
temp_word <- dete_error[ccun,5]
# print(temp_word)
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break
}
}
} else if (dete_error[ccun,3]!=0) {
for (i in letters) {
for (j in letters) {
err1 <- c()
substr(dete_error[ccun,5],dete_error[ccun,3],dete_error[ccun,3]) <- i
temp_word <- dete_error[ccun,5]
len <- nchar(temp_word)
for (a in 1:(len-1)) {
for (b in (a+1):len) {
temp <- paste("D",len, a, b, sep = "_")
tempDD <- get(temp)
char1 <- substr(temp_word,a,a)
char2 <- substr(temp_word,b,b)
if(tempDD[char1,char2]==0) {
err1 <- c(err1,a,b)
}
}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
if (is.na(err1) || length(err1)==0) {
dete_error[ccun,5] <- temp_word
break}
}
} else {next}
}
dete_error2<-dete_error
sum(dete_error2$correct!=dete_error2$error1)/nrow(dete_error2)
dete_error
sum(dete_error2$corr!=dete_error2$error1)/nrow(dete_error2)
save(dete_error2, file = '../output/error_correction2.RData')
error
error.index
correct2<-rep(NA,length(error))
correct1<-rep(NA,length(error))
load('../output/error_correction2.RData')
load('../output/error_correction.RData')
sum(dete_error2$corr!=dete_error2$error1)/nrow(dete_error2)
sum(dete_error$corr!=dete_error$error1)/nrow(dete_error)
correct1[error.index]<-dete_error$correct
correct1[-error.index]<-error[-error.index]
error.index
correct1[832]
error[832]
correct1
correct2[error.index]<-dete_error2$corr
correct2[-error.index]<-error[-error.index]
mean(correct2!=error)
test_vec_correct1<-rep(NA,test_vec)
test_vec_correct1<-rep(NA,length(test_vec))
test_vec_correct1[test_if_error]<-corret1
test_vec_correct1[test_if_error]<-correct1
test_vec_correct1<-rep(NA,length(test_vec))
test_vec_correct1[test_if_error]<-correct1
test_df_correct1<-cbind(test_vec,test_vec_correct1)
test_vec_correct2<-rep(NA,length(test_vec))
test_vec_correct2[test_if_error]<-correct2
test_df_correct2<-cbind(test_vec,test_vec_correct2)
mean(test_vec_correct1!=error)
mean(test_vec_correct1!=test_vec)
test_df_correct1
test_vec_correct1
test_if_error
test_vec_correct1[test_if_error]
test_vec_correct1<-test_vec
test_vec_correct1[test_if_error]<-correct1
test_df_correct1<-cbind(test_vec,test_vec_correct1)
test_vec_correct2<-test_vec
test_vec_correct2[test_if_error]<-correct2
test_df_correct2<-cbind(test_vec,test_vec_correct2)
mean(test_vec_correct1!=error)
mean(test_vec_correct1!=test_vec)
mean(test_vec_correct2!=test_vec)
mean(test_vec[test_if_error]!=correct1)
test_vec_correct1<-test_vec
test_vec_correct1[test_if_error]<-correct1
test_df_correct1<-cbind(tolower(test_vec),tolower(test_vec_correct1))
test_vec_correct2<-test_vec
test_vec_correct2[test_if_error]<-correct2
test_df_correct2<-cbind(tolower(test_vec),tolower(test_vec_correct2))
mean(test_df_correct1[,1]!=test_df_correct1[,2])
mean(test_df_correct2[,1]!=test_df_correct2[,2])
mean(correct1[error.index]!=dete_error$correct)
test_vec
test_vec_correct1<-tolower(test_vec)
test_vec_correct1[test_if_error]<-correct1
mean(test_vec_correct1!=tolower(test_vec))
