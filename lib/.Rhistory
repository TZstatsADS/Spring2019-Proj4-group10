#head(splittruth,30)
bigramfreq <- sapply(strsplit(splittruth[1:100],""), function(x) char_ngrams(x, 2,concatenator = ""))
sapply(strsplit(splittruth[1:100],""), function(x) char_ngrams(x, 2,concatenator = ""))
sapply(strsplit(splittruth[100:110],""), function(x) char_ngrams(x, 2,concatenator = ""))
splittruth[100:110]
library(tidyr)
truth <- c()
for(i in c(1:length(file_name_vec))){
###current_file_name <- sub(".txt","",file_name_vec[i])
inputtxt <- readLines(paste("../data/ground_truth/",file_name_vec[i],sep=""), warn=FALSE, encoding = 'UTF-8')
#inputtxt <- readLines(paste("/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/data/ground_truth/",file_name_vec[i],sep=""), warn=FALSE)
truth <- c(truth, inputtxt)
}
#head(truth,15)
splittruth <- unlist(strsplit(truth, " "))
#head(splittruth,30)
bigramfreq <- sapply(strsplit(splittruth,""), function(x) char_ngrams(x, 2,concatenator = ""))
bigramtable <- table(unlist(bigramfreq))
bigramtable
table(c(34,35,46,46,35,35,35))
sort(table(c(34,35,46,46,35,35,35)))
sort(table(c(34,35,46,46,35,35,35)),descreasing = FALSE)
sort(table(c(34,35,46,46,35,35,35)),descreasing = TRUE)
?table
bigramtable['th']
bigramtable['TH']
head(splittruth,30)
#head(truth,15)
splittruth <- unlist(strsplit(tolower(truth), " "))
#head(splittruth,30)
bigramfreq <- sapply(strsplit(splittruth,""), function(x) char_ngrams(x, 2,concatenator = ""))
bigramtable <- table(unlist(bigramfreq))
bigramtable
bigramtable['th']
length(bigramfreq)
head(bigramfreq)
length(unlist(bigramfreq))
## read the ground truth text
current_ground_truth_txt <-  readLines(paste("../data/ground_truth/",current_file_name,".txt",sep=""), warn=FALSE)
head(current_ground_truth_txt)
length(current_ground_truth_txt)
171*8
*10
171*8*8
*100
length(unlist(bigramfreq))
save(..output/bigram.RData)
save('..output/bigram.RData')
save('../output/bigram.RData')
save(bigramtable, '../output/bigram.RData')
save(bigramtable, './output/bigram.RData')
save(bigramtable, '/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData')
save(bigramtable, "./output/bigram.RData")
save(bigramtable, "../output/bigram.RData")
save(bigramtable, "/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData")
bigramtable
table(c(34,35,46,46,35,35,35))
matrix(table(c(34,35,46,46,35,35,35)))
save(2, file="/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData")
a=2
save(a, file="/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData")
bb=table(c(34,35,46,46,35,35,35))
bb
save(bb, file="/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData")
save(bigramtable, file="/Users/yeyejiang/Documents/GitHub/Spring2019-Proj4-group10/output/bigram.RData")
save(bigramtable,  file="../output/bigram.RData")
load('../output/bigram.RData)
)
...
defweg
4t653yrtghj
==p-2
quit()
load('../output/bigram.RData')
load('../output/bigram.RData')
word
char_ngrams(strsplit(word,"")[[1]],2,concatenator = "")
bigramtable[char_ngrams(strsplit(word,"")[[1]],2,concatenator = "")]
bigramletters <- tolower(char_ngrams(strsplit(word,"")[[1]],2,concatenator = ""))
bigramtable[bigramletters]
bigramtable[bigramletters]%>%length()
bigramtable[bigramletters][15]
bigramtable[bigramletters]%>%sum()
?sum
sum(bigramtable[bigramletters], na.rm = FALSE)
sum(bigramtable[bigramletters], na.rm = TRUE)
length(word)
nchar(word)
length(bigramletters)
sum(bigramtable[bigramletters], na.rm = TRUE)/length(bigramletters)
word = 'believe'
bigramletters <- tolower(char_ngrams(strsplit(word,"")[[1]],2,concatenator = ""))
sum(bigramtable[bigramletters], na.rm = TRUE)/length(bigramletters)
sum(bigramtable[bigramletters], na.rm = TRUE)/length(bigramletters)/1000
word('a3fgh')
bigramletters <- tolower(char_ngrams(strsplit(word,"")[[1]],2,concatenator = ""))
sum(bigramtable[bigramletters], na.rm = TRUE)/length(bigramletters)/1000
word = 'a3fgh'
bigramletters <- tolower(char_ngrams(strsplit(word,"")[[1]],2,concatenator = ""))
sum(bigramtable[bigramletters], na.rm = TRUE)/length(bigramletters)/1000
if (!require("devtools")) install.packages("devtools")
if (!require("pacman")) {
## devtools is required
library(devtools)
install_github("trinker/pacman")
}
library(e1071)
pacman::p_load(knitr, readr, stringr, tesseract, vecsets)
source('../lib/ifCleanToken.R')
source('../lib/features.R')
load('../output/bigram.RData')
load('../output/datamatrix.RData')
file_name_vec <- list.files("../data/ground_truth") #100 files in total
if (!require("devtools")) install.packages("devtools")
if (!require("pacman")) {
## devtools is required
library(devtools)
install_github("trinker/pacman")
}
library(e1071)
pacman::p_load(knitr, readr, stringr, tesseract, vecsets)
source('../lib/ifCleanToken.R')
source('../lib/features.R')
load('../output/bigram.RData')
load('../output/datamatrix.RData')
file_name_vec <- list.files("../data/ground_truth") #100 files in total
if (!require("devtools")) install.packages("devtools")
if (!require("pacman")) {
## devtools is required
library(devtools)
install_github("trinker/pacman")
}
library(e1071)
pacman::p_load(knitr, readr, stringr, tesseract, vecsets)
source('../lib/ifCleanToken.R')
source('../lib/features.R')
load('../output/bigram.RData')
load('../output/datamatrix.RData')
file_name_vec <- list.files("../data/ground_truth") #100 files in total
#get response if each word is correct
datamatrix = c()
for(j in c(1:length(file_name_vec))){
current_file_name <- sub(".txt","",file_name_vec[j])
## read the ground truth text
current_ground_truth_txt <- readLines(paste("../data/ground_truth/",current_file_name,".txt",sep=""), warn=FALSE)
## read the tesseract text
current_tesseract_txt <- readLines(paste("../data/tesseract/",current_file_name,".txt",sep=""), warn=FALSE)
#split ground truth text
truth_split <- str_split(current_ground_truth_txt, " ")
tru_split <- unlist(truth_split)
truth_lengthperrow <- sapply(truth_split, length)
truth_rowindex <- rep(1:length(current_ground_truth_txt), truth_lengthperrow)
#split tesseract text
tesseract_split <- str_split(current_tesseract_txt, " ")
tes_split <- unlist(tesseract_split)
tes_lengthperrow <- sapply(tesseract_split, length)
tes_row <- rep(1:length(current_tesseract_txt), tes_lengthperrow)
#get position of correct ones
res = c()
pos = rep(list(0), length(tes_split))
truthpos = c(0)
for (i in 1:length(tes_split)){
res[i] <- ifelse(tes_split[i] %in% tru_split,1,0)
pos[[i]] <- if(res[i]==1) which(tru_split==tes_split[i]) else 0
}
for (i in 1:length(tes_split)){
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos <- truthpos[-1]
truthpos[c(0, diff(truthpos))==0] <- 0
#1: correct, 0: wrong
ifwordcorrect <- rep(1,length(tes_split))
ifwordcorrect[truthpos==0] <- 0
#add row index
truth_row <- unlist(sapply(1:length(tes_split), function(x) ifelse(truthpos[x]==0,0,truth_rowindex[truthpos[x]])))
#create matrix
ifcorrectmatrix <- cbind(tes_row, truthpos, truth_row, ifwordcorrect)
rownames(ifcorrectmatrix) <- tes_split
#add features
feat <- do.call(rbind, lapply(tes_split, features))
# datamatrix[[j]] <- cbind(ifcorrectmatrix, feat)
tempmatrix <- cbind(ifcorrectmatrix, feat, j)
datamatrix <- rbind(datamatrix, tempmatrix)
# apply(is.na(datamatrix),2,sum)
# as.numeric(datamatrix[datamatrix[,'ifwordcorrect']==0,][,'f10'])%>%mean()
# as.numeric(datamatrix[datamatrix[,'ifwordcorrect']==1,][,'f10'])%>%mean()
}
save(datamatrix, file = '../output/datamatrix.RData')
apply(is.na(datamatrix),2,sum)
as.numeric(datamatrix[datamatrix[,'ifwordcorrect']==0,][,'f10'])%>%mean()
as.numeric(datamatrix[datamatrix[,'ifwordcorrect']==1,][,'f10'])%>%mean()
table(datamatrix[,'ifwordcorrect'])
datamatrix[datamatrix[,'j']==22,]
dm <- data.frame(datamatrix)
?llply
?daply
dm%>%group_by(j)%>%filter(ccc=ifwordcorrect==0)%>%mutate(nrow(ccc))
library(tidyverse)
dm%>%group_by(j)%>%filter(ccc=ifwordcorrect==0)%>%mutate(nrow(ccc))
dm%>%group_by(j)%>%filter(ifwordcorrect==0)%>%mutate(nrow(ccc))
dm%>%group_by(j)%>%filter(ifwordcorrect==0)%>%mutate(nrow)
dm%>%group_by(j)%>%filter(ifwordcorrect==0)%>%mutate(n)
dm%>%group_by(j)%>%filter(ifwordcorrect==0)%>%summarise(n())
dm%>%group_by(j, ifwordcorrect)%>%summarise(n())
i=26
current_file_name <- sub(".txt","",file_name_vec[j])
## read the ground truth text
current_ground_truth_txt <- readLines(paste("../data/ground_truth/",current_file_name,".txt",sep=""), warn=FALSE)
## read the tesseract text
current_tesseract_txt <- readLines(paste("../data/tesseract/",current_file_name,".txt",sep=""), warn=FALSE)
#split ground truth text
truth_split <- str_split(current_ground_truth_txt, " ")
tru_split <- unlist(truth_split)
truth_lengthperrow <- sapply(truth_split, length)
truth_rowindex <- rep(1:length(current_ground_truth_txt), truth_lengthperrow)
#split tesseract text
tesseract_split <- str_split(current_tesseract_txt, " ")
tes_split <- unlist(tesseract_split)
tes_lengthperrow <- sapply(tesseract_split, length)
tes_row <- rep(1:length(current_tesseract_txt), tes_lengthperrow)
res = c()
pos = rep(list(0), length(tes_split))
truthpos = c(0)
for (i in 1:length(tes_split)){
res[i] <- ifelse(tes_split[i] %in% tru_split,1,0)
pos[[i]] <- if(res[i]==1) which(tru_split==tes_split[i]) else 0
}
for (i in 1:length(tes_split)){
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos <- truthpos[-1]
truthpos[c(0, diff(truthpos))==0] <- 0
#1: correct, 0: wrong
ifwordcorrect <- rep(1,length(tes_split))
ifwordcorrect[truthpos==0] <- 0
#add row index
truth_row <- unlist(sapply(1:length(tes_split), function(x) ifelse(truthpos[x]==0,0,truth_rowindex[truthpos[x]])))
#create matrix
ifcorrectmatrix <- cbind(tes_row, truthpos, truth_row, ifwordcorrect)
rownames(ifcorrectmatrix) <- tes_split
ifcorrectmatrix
ifcorrectmatrix[4000:5000,]
tes_split[4000:4020]
truth_split[4000:4020]
tru_split[4000:4020]
tes_split[4000:4020]
tes_split[3950:4040]
tes_split[950:1040]
tru_split[1000:1020]
tru_split[80:100]
tes_split[80:100]
tes_split[580:600]
tru_split[580:600]
ifwordcorrect[600]
ifcorrectmatrix[600,]
rowname(ifcorrectmatrix[600,])
rownames(ifcorrectmatrix[600,])
ifcorrectmatrix[600:601,]
tes_split[601]
ifcorrectmatrix[4000:4010,]
ifcorrectmatrix[4000:4050,]
truthpos[4000:4050]
tru_split[4000:4050]
tru_split[3080:400]
tru_split[3080:4000]
tru_split[3980:4000]
ifcorrectmatrix[4000:4050,]
ifcorrectmatrix['groundwater',]
which(ifcorrectmatrix['groundwater',])
which(ifcorrectmatrix['program',])
ifcorrectmatrix['program',]
ifcorrectmatrix['applicable',]
pos
pos==0
res【1:100
res[1:100]
sum(res[1:5])
sum(res[1:10])
cumsum(res)
tempindex <- cumsum(res)
tempindex[10]
tempindex[9]
tempindex[9]+1
which.min(tempindex[9]+1)
which(tempindex[9]+1)
tempindex[9]+1
which(tempindex = tempindex[9]+1)
which(tempindex == tempindex[9]+1)
which.min(tempindex == tempindex[9]+1)
min(tempindex == tempindex[9]+1)
which(tempindex == tempindex[9]+1)
which.min(tempindex == tempindex[9]+1)
min(which(tempindex == tempindex[9]+1))
min(which(tempindex == tempindex[1]+1))
min(which(tempindex == tempindex[9]+1))
pos[[978]]
pos[[979]]
i=978
pos[[977]]
nextnonzero1
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
nextnonzero1
pos[[nextnonzero1]]
sum(truthpos)
truthpos
sum(truthpos!=0)
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>truthpos[i])) |
((pos[[i]]<= min(pos[[nextnonzero2]]>truthpos[i])))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos <- truthpos[-1]
truthpos[c(0, diff(truthpos))==0] <- 0
sum(truthpos!=0)
truthpos
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>truthpos[i])) |
((pos[[i]]<= min(pos[[nextnonzero2]]>truthpos[i])))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
min(pos[[nextnonzero1]]>truthpos[i]))
min(pos[[nextnonzero1]]>truthpos[i])
i
i=978
min(pos[[nextnonzero1]]>truthpos[i])
i
pos[[nextnonzero1]]>truthpos[i])
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
nextnonzero1
pos[[nextnonzero1]]>truthpos[i])
pos[[nextnonzero1]]>truthpos[i]
nextnonzero1
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[i])) |
((pos[[i]]<= min(pos[[nextnonzero2]]>pos[i])))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i])) |
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i])) |
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i]])) |
((pos[[i]]<= min(pos[[nextnonzero2]]>pos[[i]]])))))>0,
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i]]])) |
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i]]])) |
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]]>pos[[i]])) |
((pos[[i]]<= min(pos[[nextnonzero2]]>pos[[i]])))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
pos[[i]]
i=978
pos[[i]]
pos[[nextnonzero1]]
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
pos[[nextnonzero1]]
pos[[i-1]]
i=977
pos[[i]]
pos[[nextnonzero1]]
pos[[nextnonzero2]]
pos[[nextnonzero1]]>960
which(pos[[nextnonzero1]]>960)
which.min(pos[[nextnonzero1]]>960)
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(which(pos[[nextnonzero1]]>truthpos[i]))) |
((pos[[i]]<= min(which(pos[[nextnonzero2]]>truthpos[i]))))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
i=977
pos[[i]]
pos[[i+1]]
i=978
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
pos[[i]]<= min(which(pos[[nextnonzero1]]>961)
min(which(pos[[nextnonzero1]]>961)
min(which(pos[[nextnonzero1]]>961)
)
pos[[nextnonzero1]]>961
nextnonzero1[pos[[nextnonzero1]]>961]
pos[[nextnonzero1]][pos[[nextnonzero1]]>961]
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]][pos[[nextnonzero1]]>truthpos[i]])) |
(pos[[i]]<= min(pos[[nextnonzero1]][pos[[nextnonzero2]]>truthpos[i]])))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
((pos[[i]]<= min(pos[[nextnonzero1]][pos[[nextnonzero1]]>truthpos[i]])) |
(pos[[i]]<= min(pos[[nextnonzero1]][pos[[nextnonzero2]]>truthpos[i]]))))>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
b <- pos(nextnonzero2)
a <- pos(nextnonzero1)
b <- pos(nextnonzero2)
a <- pos[[nextnonzero1]]
i=977
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
a <- pos[[nextnonzero1]]
b <- pos[[nextnonzero2]]
a
b
#get position of correct ones
res = c()
pos = rep(list(0), length(tes_split))
truthpos = c(0)
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
a <- pos[[nextnonzero1]]
b <- pos[[nextnonzero2]]
#truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
( pos[[i]]<= min(a[a>truthpos[i]]) | pos[[i]]<= min(b[b>truthpos[i]]) )
)>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
a <- pos[[nextnonzero1]]
b <- pos[[nextnonzero2]]
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
# truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
#                               ( pos[[i]]<= min(a[a>truthpos[i]]) | pos[[i]]<= min(b[b>truthpos[i]]) )
#                             )>0,
#                       pos[[i]][min(which(pos[[i]]>truthpos[i]))],
#                       truthpos[i])
}
truthpos = c(0)
for (i in 1:length(tes_split)){
nextnonzero1 <- min(which(tempindex == tempindex[i]+1))
nextnonzero2 <- min(which(tempindex == tempindex[i]+2))
a <- pos[[nextnonzero1]]
b <- pos[[nextnonzero2]]
truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i])&(pos[[i]] <= (i+5)))>0,
# truthpos[i+1] <- ifelse(sum((pos[[i]]>truthpos[i]) &
#                               ( pos[[i]]<= min(a[a>truthpos[i]]) | pos[[i]]<= min(b[b>truthpos[i]]) )
#                             )>0,
pos[[i]][min(which(pos[[i]]>truthpos[i]))],
truthpos[i])
}
truthpos
